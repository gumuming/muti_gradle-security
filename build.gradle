plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}
ext {
    springBootVersion = '2.2.1.RELEASE'
}

group = 'com.liaoin.muti'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

allprojects {
    apply plugin: 'java'
    group = 'com.liaoin'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    repositories {
        maven { url aliyunRepo }
        mavenCentral()
        maven { url snapshotRepo }
        maven { url releaseRepo }
    }
    dependencies {
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.8'
        compileOnly('org.projectlombok:lombok:1.18.8')
        annotationProcessor 'org.projectlombok:lombok:1.18.8'
        compile 'tk.mybatis:mapper:4.0.3'
        compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
        compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
        compile group: 'com.spring4all', name: 'swagger-spring-boot-starter', version: '1.9.0.RELEASE'
        compile("org.hibernate:hibernate-validator:6.0.13.Final")
        compile("org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final")
        compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2")

    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile project (':entity')
    compile project (':security')
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation  "org.springframework.boot:spring-boot-starter-web"
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    runtimeOnly 'mysql:mysql-connector-java'
    testImplementation('org.springframework.boot:spring-boot-starter') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'


}

test {
    useJUnitPlatform()
}
